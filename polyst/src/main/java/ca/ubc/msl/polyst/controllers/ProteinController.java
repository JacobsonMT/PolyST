package ca.ubc.msl.polyst.controllers;

import ca.ubc.msl.polyst.model.Base;
import ca.ubc.msl.polyst.model.Protein;
import com.google.common.collect.Lists;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import java.util.List;

/**
 * Created by mjacobson on 11/12/17.
 */
@RestController
public class ProteinController {

    private static Protein testProtein;

    static {
        testProtein = new Protein("P07766");
        List<Base> sequence = Lists.newArrayList();
        sequence.add( new Base("Q", 15, 0.1399, Lists.newArrayList( 0.534858, 0.532914, 0.46578, 0.532914, 0.532914, 0.532914, 0.0, 0.596645, 0.532914, 0.574028, 0.532914, 0.526735, 0.532914, 0.532914, 0.532914, 0.538314, 0.532914, 0.532914, 0.532914, 0.532914, 0.532914)));
        sequence.add( new Base("S", 16, 0.0985, Lists.newArrayList( 0.561247, 0.389153, 0.620128, 0.549026, 0.549026, 0.605083, 0.549026, 0.549026, 0.546238, 0.549026, 0.580043, 0.67454, 0.549026, 0.549026, 0.679677, 0.458484, 0.0, 0.485106, 0.576941, 0.656093, 0.549026)));
        sequence.add( new Base("G", 24, 0.0719, Lists.newArrayList( 0.657578, 0.61415, 0.648646, 0.59235, 0.66084, 0.643824, 0.673774, 0.649676, 0.0, 0.673774, 0.673774, 0.673774, 0.673774, 0.673774, 0.673774, 0.673774, 0.59235, 0.673774, 0.633024, 0.673774, 0.721381)));
        sequence.add( new Base("T", 39, 0.0929, Lists.newArrayList( 0.582101, 0.422368, 0.67454, 0.534258, 0.612141, 0.612141, 0.612141, 0.612141, 0.612141, 0.612141, 0.520118, 0.612141, 0.500904, 0.74735, 0.612141, 0.491021, 0.435805, 0.0, 0.612141, 0.612141, 0.612141)));
        sequence.add( new Base("H", 38, 0.0798, Lists.newArrayList( 0.339494, 0.360508, 0.231841, 0.428835, 0.344033, 0.234931, 0.338419, 0.360508, 0.360508, 0.0, 0.360508, 0.257422, 0.360508, 0.360508, 0.250226, 0.328499, 0.360508, 0.360508, 0.360508, 0.431096, 0.360508)));
        sequence.add( new Base("W", 34, 0.1007, Lists.newArrayList( 0.545807, 0.529473, 0.45007, 0.529473, 0.529473, 0.758979, 0.529473, 0.529473, 0.535903, 0.529473, 0.529473, 0.653343, 0.529473, 0.529473, 0.529473, 0.529473, 0.559411, 0.529473, 0.0, 0.529473, 0.529473)));
        sequence.add( new Base("R", 41, 0.087, Lists.newArrayList( 0.656991, 0.735169, 0.0, 0.735169, 0.735169, 0.791667, 0.610069, 0.735169, 0.503391, 0.624422, 0.738522, 0.670233, 0.411958, 0.646712, 0.735169, 0.52818, 0.496057, 0.541767, 0.773659, 0.735169, 0.735169)));
        sequence.add( new Base("V", 44, 0.0581, Lists.newArrayList( 0.69512, 0.47447, 0.725952, 0.725952, 0.642568, 0.725952, 0.725952, 0.68848, 0.546552, 0.725952, 0.622087, 0.717953, 0.725952, 0.797393, 0.732306, 0.725952, 0.725952, 0.725952, 0.725952, 0.725952, 0.0)));
        sequence.add( new Base("L", 44, 0.0719, Lists.newArrayList( 0.700095, 0.7174, 0.706387, 0.7174, 0.7174, 0.7174, 0.7174, 0.7174, 0.7174, 0.608913, 0.758137, 0.0, 0.7174, 0.613811, 0.730661, 0.663464, 0.659898, 0.7174, 0.758979, 0.7174, 0.627562)));
        sequence.add( new Base("G", 51, 0.0929, Lists.newArrayList( 0.759189, 0.619249, 0.808808, 0.773973, 0.763462, 0.642568, 0.773973, 0.75324, 0.0, 0.773973, 0.773973, 0.773973, 0.773973, 0.773973, 0.773973, 0.773973, 0.773973, 0.773973, 0.737279, 0.773973, 0.812312)));
        sequence.add( new Base("L", 49, 0.1206, Lists.newArrayList( 0.710633, 0.726153, 0.716559, 0.726153, 0.726153, 0.726153, 0.726153, 0.726153, 0.726153, 0.619839, 0.768221, 0.0, 0.726153, 0.693704, 0.659584, 0.674817, 0.670924, 0.726153, 0.768837, 0.726153, 0.66801)));
        sequence.add( new Base("C", 52, 0.1162, Lists.newArrayList( 0.61427, 0.636842, 0.616335, 0.636842, 0.636842, 0.0, 0.636842, 0.636842, 0.654034, 0.636842, 0.636842, 0.539971, 0.636842, 0.636842, 0.480372, 0.636842, 0.486488, 0.636842, 0.533881, 0.717953, 0.636842)));
        sequence.add( new Base("L", 51, 0.1206, Lists.newArrayList( 0.71297, 0.725412, 0.71573, 0.725412, 0.725412, 0.725412, 0.725412, 0.725412, 0.725412, 0.618859, 0.767455, 0.0, 0.725412, 0.692887, 0.648646, 0.673774, 0.670233, 0.725412, 0.767958, 0.725412, 0.736764)));
        sequence.add( new Base("L", 50, 0.1323, Lists.newArrayList( 0.699999, 0.731025, 0.721155, 0.731025, 0.731025, 0.662698, 0.731025, 0.731025, 0.731025, 0.625527, 0.772202, 0.0, 0.731025, 0.606841, 0.658153, 0.568741, 0.589499, 0.731025, 0.772918, 0.731025, 0.743018)));
        sequence.add( new Base("S", 47, 0.1449, Lists.newArrayList( 0.629719, 0.389153, 0.708258, 0.640886, 0.640886, 0.693704, 0.640886, 0.640886, 0.638525, 0.516802, 0.669907, 0.686106, 0.484265, 0.640886, 0.760812, 0.609466, 0.0, 0.634217, 0.727522, 0.739376, 0.50211)));
        sequence.add( new Base("V", 45, 0.1229, Lists.newArrayList( 0.618154, 0.382773, 0.670534, 0.670534, 0.582806, 0.670534, 0.670534, 0.483022, 0.348528, 0.670534, 0.483788, 0.66025, 0.670534, 0.75005, 0.677843, 0.670534, 0.670534, 0.670534, 0.670534, 0.670534, 0.0)));
        sequence.add( new Base("G", 44, 0.1852, Lists.newArrayList( 0.681959, 0.507597, 0.632748, 0.712101, 0.700045, 0.570901, 0.712101, 0.68848, 0.0, 0.712101, 0.712101, 0.712101, 0.596343, 0.712101, 0.712101, 0.712101, 0.712101, 0.712101, 0.671577, 0.712101, 0.756417)));
        sequence.add( new Base("V", 45, 0.1852, Lists.newArrayList( 0.588547, 0.326879, 0.637143, 0.637143, 0.546552, 0.637143, 0.637143, 0.595979, 0.451565, 0.637143, 0.445047, 0.62726, 0.637143, 0.720175, 0.644879, 0.637143, 0.637143, 0.45262, 0.637143, 0.637143, 0.0)));
        sequence.add( new Base("W", 38, 0.1643, Lists.newArrayList( 0.550972, 0.540474, 0.540474, 0.540474, 0.540474, 0.768221, 0.540474, 0.540474, 0.54728, 0.540474, 0.540474, 0.544819, 0.540474, 0.540474, 0.540474, 0.540474, 0.570901, 0.470602, 0.0, 0.540474, 0.540474)));
        sequence.add( new Base("G", 37, 0.2224, Lists.newArrayList( 0.721214, 0.593668, 0.773659, 0.734391, 0.723654, 0.70768, 0.637796, 0.712955, 0.0, 0.734391, 0.734391, 0.734391, 0.734391, 0.734391, 0.734391, 0.734391, 0.734391, 0.734391, 0.69737, 0.734391, 0.777979)));
        sequence.add( new Base("Q", 22, 0.2292, Lists.newArrayList( 0.560225, 0.563643, 0.556234, 0.563643, 0.490582, 0.563643, 0.0, 0.557678, 0.563643, 0.604116, 0.563643, 0.556937, 0.490582, 0.563643, 0.563643, 0.624422, 0.563643, 0.563643, 0.563643, 0.563643, 0.563643)));
        sequence.add( new Base("D", 26, 0.2988, Lists.newArrayList( 0.637662, 0.603451, 0.658153, 0.681083, 0.0, 0.658153, 0.658153, 0.413527, 0.658153, 0.653343, 0.658153, 0.658153, 0.658153, 0.658153, 0.658153, 0.658153, 0.57055, 0.658153, 0.658153, 0.659898, 0.6359)));
        sequence.add( new Base("G", 36, 0.4087, Lists.newArrayList( 0.566817, 0.429953, 0.659584, 0.615481, 0.460594, 0.584024, 0.533165, 0.453574, 0.0, 0.615481, 0.615481, 0.504018, 0.615481, 0.615481, 0.615481, 0.615481, 0.514228, 0.615481, 0.572948, 0.615481, 0.518108)));
        sequence.add( new Base("N", 18, 0.3948, Lists.newArrayList( 0.445525, 0.39066, 0.475826, 0.0, 0.356339, 0.475826, 0.475826, 0.387809, 0.475826, 0.433682, 0.442561, 0.475826, 0.475826, 0.475826, 0.475826, 0.39066, 0.467538, 0.396185, 0.475826, 0.441292, 0.475826)));
        sequence.add( new Base("E", 14, 0.4541, Lists.newArrayList( 0.586886, 0.617691, 0.602559, 0.602559, 0.483022, 0.602559, 0.559788, 0.0, 0.563869, 0.602559, 0.602559, 0.602559, 0.605473, 0.602559, 0.602559, 0.602559, 0.542998, 0.602559, 0.602559, 0.602559, 0.54728)));
        sequence.add( new Base("E", 12, 0.3983, Lists.newArrayList( 0.613622, 0.6359, 0.620743, 0.620743, 0.567912, 0.620743, 0.620743, 0.0, 0.582806, 0.620743, 0.620743, 0.620743, 0.615004, 0.620743, 0.620743, 0.620743, 0.620743, 0.620743, 0.620743, 0.620743, 0.566795)));
        sequence.add( new Base("M", 11, 0.4507, Lists.newArrayList( 0.524595, 0.519075, 0.62726, 0.519075, 0.519075, 0.519075, 0.519075, 0.519075, 0.519075, 0.519075, 0.501821, 0.521662, 0.612505, 0.0, 0.519075, 0.519075, 0.519075, 0.436998, 0.519075, 0.519075, 0.519075)));
        sequence.add( new Base("G", 10, 0.374, Lists.newArrayList( 0.57517, 0.519753, 0.629119, 0.583471, 0.49666, 0.55106, 0.583471, 0.556937, 0.0, 0.583471, 0.583471, 0.583471, 0.583471, 0.583471, 0.583471, 0.583471, 0.583471, 0.583471, 0.539092, 0.583471, 0.633954)));
        sequence.add( new Base("G", 12, 0.4256, Lists.newArrayList( 0.447864, 0.408881, 0.513625, 0.467953, 0.389341, 0.436747, 0.467953, 0.388839, 0.0, 0.467953, 0.467953, 0.467953, 0.395871, 0.467953, 0.467953, 0.467953, 0.398383, 0.467953, 0.426964, 0.467953, 0.47123)));
        sequence.add( new Base("I", 11, 0.5176, Lists.newArrayList( 0.479621, 0.482105, 0.457756, 0.522943, 0.482105, 0.482105, 0.482105, 0.482105, 0.482105, 0.482105, 0.0, 0.401309, 0.450573, 0.476128, 0.530942, 0.482105, 0.479958, 0.490029, 0.482105, 0.482105, 0.482105)));
        sequence.add( new Base("T", 11, 0.5254, Lists.newArrayList( 0.518094, 0.458484, 0.586423, 0.555518, 0.520118, 0.520118, 0.520118, 0.520118, 0.520118, 0.520118, 0.479531, 0.520118, 0.520118, 0.664532, 0.520118, 0.402652, 0.455232, 0.0, 0.520118, 0.520118, 0.520118)));
        sequence.add( new Base("Q", 11, 0.5211, Lists.newArrayList( 0.492608, 0.492377, 0.48591, 0.492377, 0.492377, 0.492377, 0.0, 0.55337, 0.492377, 0.530616, 0.492377, 0.420622, 0.492377, 0.492377, 0.492377, 0.551776, 0.416365, 0.492377, 0.492377, 0.492377, 0.492377)));
        sequence.add( new Base("T", 11, 0.4476, Lists.newArrayList( 0.423993, 0.376155, 0.436131, 0.404975, 0.433682, 0.433682, 0.433682, 0.433682, 0.433682, 0.433682, 0.410425, 0.433682, 0.381329, 0.577959, 0.433682, 0.325334, 0.373066, 0.0, 0.433682, 0.433682, 0.433682)));
        sequence.add( new Base("P", 15, 0.374, Lists.newArrayList( 0.503134, 0.516802, 0.459978, 0.534823, 0.467538, 0.534823, 0.425708, 0.467538, 0.534823, 0.438467, 0.534823, 0.532914, 0.534823, 0.534823, 0.534823, 0.0, 0.472222, 0.497438, 0.534823, 0.467538, 0.534823)));
        sequence.add( new Base("Y", 22, 0.2951, Lists.newArrayList( 0.625496, 0.632484, 0.632484, 0.73208, 0.540474, 0.67454, 0.632484, 0.632484, 0.632484, 0.609466, 0.632484, 0.632484, 0.632484, 0.632484, 0.519753, 0.632484, 0.632484, 0.632484, 0.632484, 0.0, 0.58582)));
        sequence.add( new Base("K", 43, 0.2782, Lists.newArrayList( 0.547364, 0.454039, 0.444306, 0.648646, 0.610069, 0.610069, 0.427341, 0.46578, 0.48591, 0.430166, 0.576665, 0.501532, 0.0, 0.538025, 0.610069, 0.610069, 0.610069, 0.546953, 0.610069, 0.610069, 0.610069)));
        sequence.add( new Base("V", 57, 0.1702, Lists.newArrayList( 0.779675, 0.671577, 0.797393, 0.797393, 0.724118, 0.797393, 0.797393, 0.765747, 0.634456, 0.797393, 0.797393, 0.789494, 0.797393, 0.856352, 0.80337, 0.797393, 0.797393, 0.797393, 0.797393, 0.797393, 0.0)));
        sequence.add( new Base("S", 98, 0.2258, Lists.newArrayList( 0.788569, 0.624096, 0.780854, 0.801914, 0.737003, 0.839537, 0.801914, 0.71696, 0.800294, 0.801914, 0.823048, 0.904749, 0.801914, 0.71696, 0.883966, 0.777564, 0.0, 0.79625, 0.863083, 0.793839, 0.71696)));
        sequence.add( new Base("I", 99, 0.2292, Lists.newArrayList( 0.839082, 0.837101, 0.869173, 0.863271, 0.837101, 0.837101, 0.837101, 0.837101, 0.837101, 0.837101, 0.0, 0.826853, 0.815602, 0.833873, 0.86783, 0.837101, 0.83592, 0.882484, 0.837101, 0.837101, 0.776547)));
        sequence.add( new Base("S", 103, 0.1553, Lists.newArrayList( 0.828669, 0.734868, 0.859227, 0.813078, 0.813078, 0.849533, 0.813078, 0.813078, 0.811244, 0.813078, 0.833873, 0.911003, 0.813078, 0.813078, 0.8912, 0.78923, 0.0, 0.808808, 0.871961, 0.879144, 0.813078)));
        sequence.add( new Base("G", 104, 0.2399, Lists.newArrayList( 0.832789, 0.813078, 0.762897, 0.853614, 0.845966, 0.833597, 0.853614, 0.837967, 0.0, 0.853614, 0.853614, 0.853614, 0.779511, 0.853614, 0.853614, 0.853614, 0.779511, 0.853614, 0.826163, 0.779511, 0.882258)));
        sequence.add( new Base("T", 103, 0.2328, Lists.newArrayList( 0.710608, 0.707329, 0.711071, 0.626406, 0.591621, 0.760398, 0.760398, 0.760398, 0.760398, 0.760398, 0.61572, 0.760398, 0.650053, 0.862405, 0.760398, 0.650869, 0.482105, 0.0, 0.760398, 0.760398, 0.760398)));
        sequence.add( new Base("T", 103, 0.2224, Lists.newArrayList( 0.59605, 0.657361, 0.474156, 0.746333, 0.413289, 0.716295, 0.499297, 0.499297, 0.716295, 0.429501, 0.749133, 0.716295, 0.463382, 0.610069, 0.716295, 0.600487, 0.352873, 0.0, 0.716295, 0.716295, 0.531997)));
        sequence.add( new Base("V", 100, 0.2364, Lists.newArrayList( 0.835746, 0.752399, 0.857407, 0.857407, 0.79625, 0.857407, 0.857407, 0.830219, 0.718957, 0.857407, 0.736149, 0.850751, 0.857407, 0.901422, 0.861551, 0.857407, 0.857407, 0.857407, 0.857407, 0.857407, 0.0)));
        sequence.add( new Base("I", 104, 0.1424, Lists.newArrayList( 0.613313, 0.697634, 0.743759, 0.734391, 0.697634, 0.697634, 0.697634, 0.367089, 0.697634, 0.697634, 0.0, 0.683419, 0.380563, 0.404272, 0.545145, 0.697634, 0.696127, 0.41089, 0.697634, 0.697634, 0.408579)));
        sequence.add( new Base("L", 103, 0.1476, Lists.newArrayList( 0.75727, 0.781545, 0.772441, 0.781545, 0.781545, 0.781545, 0.781545, 0.781545, 0.781545, 0.683419, 0.720175, 0.0, 0.781545, 0.751746, 0.793839, 0.73414, 0.731301, 0.781545, 0.817172, 0.781545, 0.568452)));
        sequence.add( new Base("T", 93, 0.0929, Lists.newArrayList( 0.774064, 0.752399, 0.845276, 0.825309, 0.801349, 0.801349, 0.801349, 0.801349, 0.801349, 0.801349, 0.827544, 0.801349, 0.662347, 0.83415, 0.801349, 0.700824, 0.590843, 0.0, 0.801349, 0.801349, 0.655026)));
        sequence.add( new Base("C", 48, 0.1323, Lists.newArrayList( 0.689308, 0.68583, 0.665097, 0.68583, 0.68583, 0.0, 0.68583, 0.68583, 0.702695, 0.68583, 0.68583, 0.68583, 0.68583, 0.68583, 0.642907, 0.68583, 0.68583, 0.68583, 0.72393, 0.760599, 0.68583)));
        sequence.add( new Base("P", 19, 0.1275, Lists.newArrayList( 0.603549, 0.603049, 0.606841, 0.564547, 0.621308, 0.621308, 0.577557, 0.621308, 0.621308, 0.591986, 0.621308, 0.682866, 0.621308, 0.621308, 0.538025, 0.0, 0.530189, 0.642568, 0.621308, 0.538025, 0.621308)));
        sequence.add( new Base("Q", 60, 0.1914, Lists.newArrayList( 0.607235, 0.655289, 0.449744, 0.655289, 0.655289, 0.655289, 0.0, 0.562123, 0.655289, 0.693277, 0.535538, 0.450296, 0.500276, 0.655289, 0.655289, 0.711787, 0.545999, 0.655289, 0.655289, 0.655289, 0.535538)));
        sequence.add( new Base("Y", 44, 0.2034, Lists.newArrayList( 0.548959, 0.500276, 0.508062, 0.575811, 0.382158, 0.666403, 0.625251, 0.444005, 0.508062, 0.40824, 0.625251, 0.625251, 0.483788, 0.625251, 0.576113, 0.625251, 0.500276, 0.500276, 0.625251, 0.0, 0.625251)));
        sequence.add( new Base("P", 36, 0.2002, Lists.newArrayList( 0.506367, 0.423222, 0.545999, 0.56255, 0.422167, 0.56255, 0.517819, 0.46131, 0.56255, 0.530942, 0.56255, 0.479079, 0.56255, 0.56255, 0.440451, 0.0, 0.412874, 0.461636, 0.56255, 0.56255, 0.42508)));
        sequence.add( new Base("G", 18, 0.2034, Lists.newArrayList( 0.617509, 0.574957, 0.680744, 0.571692, 0.549829, 0.606113, 0.636842, 0.535903, 0.0, 0.636842, 0.636842, 0.636842, 0.636842, 0.636842, 0.636842, 0.636842, 0.636842, 0.563379, 0.595263, 0.636842, 0.68637)));
        sequence.add( new Base("S", 11, 0.1349, Lists.newArrayList( 0.479959, 0.367089, 0.527275, 0.457756, 0.457756, 0.512357, 0.457756, 0.406558, 0.455596, 0.389793, 0.489477, 0.636528, 0.457756, 0.457756, 0.591621, 0.427341, 0.0, 0.4512, 0.551776, 0.566079, 0.457756)));
        sequence.add( new Base("E", 12, 0.1759, Lists.newArrayList( 0.575122, 0.613095, 0.597762, 0.538314, 0.467212, 0.597762, 0.597762, 0.0, 0.558758, 0.597762, 0.597762, 0.597762, 0.58052, 0.597762, 0.597762, 0.513964, 0.597762, 0.538314, 0.597762, 0.597762, 0.541767)));
        sequence.add( new Base("I", 11, 0.2436, Lists.newArrayList( 0.473342, 0.40372, 0.526999, 0.517129, 0.474771, 0.474771, 0.474771, 0.474771, 0.474771, 0.474771, 0.0, 0.402652, 0.444306, 0.470062, 0.524839, 0.474771, 0.47344, 0.553685, 0.474771, 0.474771, 0.40372)));
        sequence.add( new Base("L", 16, 0.3286, Lists.newArrayList( 0.360534, 0.390044, 0.380011, 0.33597, 0.390044, 0.390044, 0.332266, 0.347298, 0.390044, 0.259469, 0.385096, 0.0, 0.333798, 0.357469, 0.40603, 0.340479, 0.303936, 0.340479, 0.436433, 0.390044, 0.341194)));
        sequence.add( new Base("W", 15, 0.3392, Lists.newArrayList( 0.458561, 0.439798, 0.439798, 0.439798, 0.439798, 0.677605, 0.439798, 0.439798, 0.445725, 0.439798, 0.400517, 0.563379, 0.439798, 0.439798, 0.439798, 0.439798, 0.468254, 0.439798, 0.0, 0.439798, 0.439798)));
        sequence.add( new Base("Q", 33, 0.4507, Lists.newArrayList( 0.496043, 0.410425, 0.517619, 0.524513, 0.524513, 0.524513, 0.0, 0.463382, 0.524513, 0.56574, 0.524513, 0.392744, 0.419216, 0.524513, 0.524513, 0.586109, 0.524513, 0.405227, 0.419216, 0.524513, 0.524513)));
        sequence.add( new Base("H", 31, 0.4369, Lists.newArrayList( 0.478637, 0.514919, 0.393435, 0.590504, 0.497061, 0.514919, 0.384255, 0.514919, 0.514919, 0.0, 0.389341, 0.438467, 0.393435, 0.514919, 0.514919, 0.477383, 0.427868, 0.514919, 0.514919, 0.593668, 0.389341)));
        sequence.add( new Base("N", 12, 0.4256, Lists.newArrayList( 0.541627, 0.547745, 0.547745, 0.0, 0.432615, 0.547745, 0.547745, 0.547745, 0.547745, 0.50432, 0.595263, 0.547745, 0.547745, 0.547745, 0.547745, 0.494487, 0.635071, 0.543864, 0.547745, 0.512357, 0.547745)));
        sequence.add( new Base("D", 15, 0.5211, Lists.newArrayList( 0.538547, 0.505538, 0.562852, 0.525367, 0.0, 0.562852, 0.562852, 0.42508, 0.490582, 0.556937, 0.562852, 0.562852, 0.505324, 0.562852, 0.562852, 0.562852, 0.492377, 0.562852, 0.562852, 0.564949, 0.537711)));
        sequence.add( new Base("K", 6, 0.4149, Lists.newArrayList( 0.436042, 0.442912, 0.442912, 0.483788, 0.442912, 0.442912, 0.386654, 0.439798, 0.442912, 0.442912, 0.414369, 0.403029, 0.0, 0.33651, 0.442912, 0.442912, 0.442912, 0.545585, 0.442912, 0.442912, 0.403029)));
        sequence.add( new Base("N", 9, 0.4149, Lists.newArrayList( 0.405211, 0.373066, 0.423222, 0.0, 0.386415, 0.423222, 0.373066, 0.37112, 0.423222, 0.382484, 0.466948, 0.376796, 0.367453, 0.423222, 0.423222, 0.423222, 0.508062, 0.374008, 0.423222, 0.38958, 0.367453)));
        sequence.add( new Base("I", 5, 0.4186, Lists.newArrayList( 0.372662, 0.368156, 0.417483, 0.406558, 0.368156, 0.368156, 0.353451, 0.368156, 0.368156, 0.368156, 0.0, 0.334037, 0.319997, 0.345012, 0.41531, 0.368156, 0.367089, 0.440087, 0.368156, 0.368156, 0.368156)));
        sequence.add( new Base("G", 5, 0.4119, Lists.newArrayList( 0.43161, 0.381819, 0.48591, 0.422368, 0.405766, 0.409973, 0.439145, 0.392744, 0.0, 0.439145, 0.439145, 0.439145, 0.439145, 0.439145, 0.439145, 0.420622, 0.439145, 0.439145, 0.39891, 0.439145, 0.491021)));
        sequence.add( new Base("G", 3, 0.5098, Lists.newArrayList( 0.435897, 0.385649, 0.490318, 0.443277, 0.405766, 0.41531, 0.443277, 0.420447, 0.0, 0.443277, 0.443277, 0.443277, 0.443277, 0.443277, 0.423636, 0.443277, 0.408881, 0.443277, 0.403946, 0.443277, 0.495316)));
        sequence.add( new Base("D", 6, 0.6183, Lists.newArrayList( 0.494506, 0.457128, 0.513625, 0.536292, 0.0, 0.513625, 0.513625, 0.337214, 0.513625, 0.457404, 0.513625, 0.513625, 0.478325, 0.513625, 0.513625, 0.513625, 0.513625, 0.513625, 0.513625, 0.515672, 0.45007)));
        sequence.add( new Base("E", 3, 0.7331, Lists.newArrayList( 0.498288, 0.518108, 0.503114, 0.503114, 0.45007, 0.503114, 0.503114, 0.0, 0.465102, 0.503114, 0.503114, 0.503114, 0.569507, 0.503114, 0.503114, 0.503114, 0.475299, 0.503114, 0.503114, 0.503114, 0.448902)));
        sequence.add( new Base("D", 3, 0.6375, Lists.newArrayList( 0.513005, 0.470062, 0.526422, 0.512947, 0.0, 0.526422, 0.526422, 0.368457, 0.526422, 0.52057, 0.526422, 0.526422, 0.526422, 0.526422, 0.526422, 0.526422, 0.526422, 0.526422, 0.526422, 0.52818, 0.503391)));
        sequence.add( new Base("D", 3, 0.6481, Lists.newArrayList( 0.513032, 0.470062, 0.526422, 0.550784, 0.0, 0.526422, 0.526422, 0.392154, 0.499925, 0.52057, 0.526422, 0.526422, 0.526422, 0.526422, 0.526422, 0.526422, 0.526422, 0.526422, 0.526422, 0.493658, 0.503391)));
        sequence.add( new Base("K", 3, 0.5456, Lists.newArrayList( 0.424255, 0.422368, 0.422368, 0.459978, 0.422368, 0.422368, 0.419605, 0.419216, 0.422368, 0.422368, 0.39135, 0.422368, 0.0, 0.357934, 0.422368, 0.422368, 0.422368, 0.521976, 0.422368, 0.422368, 0.422368)));
        sequence.add( new Base("N", 3, 0.5254, Lists.newArrayList( 0.43197, 0.433971, 0.433971, 0.0, 0.396587, 0.433971, 0.433971, 0.433971, 0.433971, 0.392154, 0.478689, 0.433971, 0.433971, 0.433971, 0.40824, 0.433971, 0.519075, 0.404975, 0.433971, 0.400053, 0.433971)));
        sequence.add( new Base("I", 3, 0.5493, Lists.newArrayList( 0.447542, 0.438153, 0.491712, 0.480912, 0.438153, 0.438153, 0.438153, 0.438153, 0.438153, 0.438153, 0.0, 0.424616, 0.409973, 0.434235, 0.489477, 0.438153, 0.436747, 0.515936, 0.438153, 0.438153, 0.438153)));
        sequence.add( new Base("G", 3, 0.4441, Lists.newArrayList( 0.493236, 0.436998, 0.543864, 0.499046, 0.486488, 0.466345, 0.499046, 0.472222, 0.0, 0.499046, 0.470301, 0.499046, 0.499046, 0.499046, 0.499046, 0.499046, 0.499046, 0.499046, 0.455922, 0.499046, 0.549829)));
        sequence.add( new Base("S", 5, 0.5296, Lists.newArrayList( 0.407525, 0.302931, 0.450573, 0.384795, 0.384795, 0.435805, 0.368734, 0.368734, 0.382999, 0.384795, 0.414369, 0.558758, 0.368734, 0.384795, 0.512357, 0.356339, 0.0, 0.363233, 0.473804, 0.461636, 0.384795)));
        sequence.add( new Base("D", 3, 0.5493, Lists.newArrayList( 0.51315, 0.470062, 0.526422, 0.550784, 0.0, 0.526422, 0.526422, 0.368457, 0.526422, 0.485496, 0.526422, 0.526422, 0.526422, 0.526422, 0.526422, 0.526422, 0.526422, 0.526422, 0.526422, 0.52818, 0.503391)));
        sequence.add( new Base("E", 5, 0.4766, Lists.newArrayList( 0.48857, 0.510009, 0.495316, 0.495316, 0.44177, 0.495316, 0.475299, 0.0, 0.456801, 0.475299, 0.495316, 0.495316, 0.560717, 0.495316, 0.495316, 0.495316, 0.495316, 0.47344, 0.495316, 0.495316, 0.441029)));
        sequence.add( new Base("D", 5, 0.4801, Lists.newArrayList( 0.506203, 0.463105, 0.501218, 0.523998, 0.0, 0.519414, 0.519414, 0.385913, 0.519414, 0.514228, 0.519414, 0.519414, 0.497438, 0.519414, 0.519414, 0.519414, 0.519414, 0.519414, 0.519414, 0.521348, 0.497061)));
        sequence.add( new Base("H", 9, 0.4725, Lists.newArrayList( 0.407989, 0.419907, 0.419907, 0.49195, 0.401309, 0.419907, 0.339399, 0.419907, 0.419907, 0.0, 0.419907, 0.429739, 0.376796, 0.419907, 0.419907, 0.384004, 0.376796, 0.367779, 0.419907, 0.438467, 0.366385)));
        sequence.add( new Base("L", 8, 0.4619, Lists.newArrayList( 0.470909, 0.483336, 0.470301, 0.483336, 0.439534, 0.483336, 0.483336, 0.483336, 0.483336, 0.375414, 0.530189, 0.0, 0.483336, 0.445725, 0.455596, 0.427868, 0.424616, 0.483336, 0.530942, 0.483336, 0.497061)));
        sequence.add( new Base("S", 21, 0.4476, Lists.newArrayList( 0.450715, 0.356666, 0.516451, 0.446328, 0.446328, 0.501532, 0.446328, 0.389793, 0.444005, 0.446328, 0.392744, 0.546238, 0.446328, 0.446328, 0.48591, 0.417483, 0.0, 0.375038, 0.539092, 0.554287, 0.366385)));
        sequence.add( new Base("L", 12, 0.3774, Lists.newArrayList( 0.489761, 0.509732, 0.498757, 0.509732, 0.509732, 0.509732, 0.509732, 0.509732, 0.509732, 0.399287, 0.476743, 0.0, 0.509732, 0.472599, 0.525668, 0.453574, 0.45007, 0.509732, 0.477861, 0.509732, 0.453574)));
        sequence.add( new Base("K", 48, 0.2951, Lists.newArrayList( 0.436266, 0.496295, 0.496295, 0.362141, 0.345012, 0.496295, 0.324982, 0.318904, 0.496295, 0.496295, 0.463382, 0.375213, 0.0, 0.427341, 0.496295, 0.316719, 0.496295, 0.392405, 0.496295, 0.496295, 0.496295)));
        sequence.add( new Base("E", 54, 0.3182, Lists.newArrayList( 0.549372, 0.677605, 0.46902, 0.443666, 0.386867, 0.661995, 0.46902, 0.0, 0.378227, 0.46902, 0.661995, 0.661995, 0.508991, 0.661995, 0.661995, 0.661995, 0.443666, 0.46902, 0.661995, 0.478689, 0.61032)));
        sequence.add( new Base("F", 13, 0.2328, Lists.newArrayList( 0.542479, 0.541428, 0.541428, 0.541428, 0.541428, 0.625527, 0.541428, 0.541428, 0.541428, 0.541428, 0.555857, 0.541428, 0.541428, 0.541428, 0.0, 0.541428, 0.549026, 0.541428, 0.541428, 0.433055, 0.563643)));
        sequence.add( new Base("S", 39, 0.1643, Lists.newArrayList( 0.68882, 0.571692, 0.73208, 0.667445, 0.613459, 0.719723, 0.667445, 0.667445, 0.665436, 0.667445, 0.69737, 0.816858, 0.667445, 0.667445, 0.783718, 0.636842, 0.0, 0.661141, 0.752637, 0.764517, 0.667445)));
        sequence.add( new Base("E", 16, 0.1791, Lists.newArrayList( 0.651862, 0.669907, 0.655289, 0.655289, 0.603765, 0.655289, 0.655289, 0.0, 0.618143, 0.655289, 0.655289, 0.655289, 0.71696, 0.655289, 0.655289, 0.655289, 0.655289, 0.655289, 0.655289, 0.655289, 0.602559)));
        sequence.add( new Base("L", 57, 0.1643, Lists.newArrayList( 0.474989, 0.522943, 0.511352, 0.522943, 0.522943, 0.522943, 0.522943, 0.522943, 0.522943, 0.413803, 0.379646, 0.0, 0.522943, 0.276233, 0.539544, 0.466948, 0.463382, 0.359014, 0.573161, 0.522943, 0.335217)));
        sequence.add( new Base("E", 57, 0.1553, Lists.newArrayList( 0.752144, 0.789745, 0.778205, 0.700824, 0.623091, 0.778205, 0.778205, 0.0, 0.614477, 0.778205, 0.778205, 0.778205, 0.713407, 0.778205, 0.778205, 0.778205, 0.778205, 0.778205, 0.778205, 0.778205, 0.73252)));
        sequence.add( new Base("Q", 60, 0.1553, Lists.newArrayList( 0.582766, 0.625791, 0.61847, 0.42508, 0.416365, 0.625791, 0.0, 0.684838, 0.625791, 0.45262, 0.625791, 0.619563, 0.625791, 0.625791, 0.625791, 0.683419, 0.446328, 0.625791, 0.625791, 0.467953, 0.625791)));
        sequence.add( new Base("S", 57, 0.2129, Lists.newArrayList( 0.713828, 0.608248, 0.673423, 0.591986, 0.702406, 0.75005, 0.702406, 0.702406, 0.700045, 0.702406, 0.728514, 0.841697, 0.702406, 0.702406, 0.810441, 0.671577, 0.0, 0.696416, 0.781545, 0.791955, 0.702406)));
        sequence.add( new Base("G", 41, 0.2399, Lists.newArrayList( 0.755552, 0.709376, 0.798121, 0.762583, 0.752097, 0.734604, 0.762583, 0.74013, 0.0, 0.762583, 0.762583, 0.762583, 0.762583, 0.762583, 0.762583, 0.704503, 0.762583, 0.762583, 0.725701, 0.762583, 0.802542)));
        sequence.add( new Base("Y", 62, 0.3215, Lists.newArrayList( 0.655313, 0.727522, 0.582505, 0.813241, 0.446328, 0.765747, 0.727522, 0.612505, 0.727522, 0.547745, 0.727522, 0.647905, 0.727522, 0.621622, 0.522943, 0.727522, 0.572735, 0.612505, 0.727522, 0.0, 0.612505)));
        sequence.add( new Base("Y", 53, 0.3392, Lists.newArrayList( 0.775425, 0.780854, 0.780854, 0.855071, 0.704503, 0.813078, 0.780854, 0.780854, 0.780854, 0.761742, 0.780854, 0.780854, 0.780854, 0.780854, 0.666729, 0.780854, 0.780854, 0.780854, 0.780854, 0.0, 0.780854)));
        sequence.add( new Base("V", 51, 0.2988, Lists.newArrayList( 0.598628, 0.356917, 0.667445, 0.667445, 0.578624, 0.667445, 0.511038, 0.62726, 0.484265, 0.546238, 0.511038, 0.65755, 0.667445, 0.746974, 0.674817, 0.667445, 0.496057, 0.511038, 0.667445, 0.667445, 0.0)));
        sequence.add( new Base("C", 33, 0.3948, Lists.newArrayList( 0.633642, 0.629747, 0.609466, 0.629747, 0.629747, 0.0, 0.629747, 0.629747, 0.64729, 0.629747, 0.629747, 0.629747, 0.629747, 0.629747, 0.585003, 0.629747, 0.629747, 0.629747, 0.669907, 0.711071, 0.629747)));
        sequence.add( new Base("Y", 19, 0.3087, Lists.newArrayList( 0.632174, 0.643548, 0.643548, 0.741473, 0.552391, 0.68524, 0.643548, 0.59402, 0.643548, 0.620128, 0.643548, 0.567586, 0.643548, 0.643548, 0.527891, 0.643548, 0.643548, 0.643548, 0.643548, 0.0, 0.643548)));
        sequence.add( new Base("P", 30, 0.2224, Lists.newArrayList( 0.623576, 0.554287, 0.557402, 0.668324, 0.668324, 0.668324, 0.528544, 0.668324, 0.668324, 0.639843, 0.668324, 0.620743, 0.556234, 0.573463, 0.668324, 0.0, 0.556234, 0.577959, 0.668324, 0.668324, 0.668324)));
        sequence.add( new Base("R", 21, 0.2258, Lists.newArrayList( 0.561698, 0.569068, 0.0, 0.632748, 0.542998, 0.699329, 0.632748, 0.542998, 0.467953, 0.64729, 0.636842, 0.561056, 0.352672, 0.534258, 0.632748, 0.435528, 0.460292, 0.471908, 0.676072, 0.632748, 0.542998)));
        sequence.add( new Base("G", 14, 0.15, Lists.newArrayList( 0.529532, 0.429501, 0.600977, 0.491021, 0.468254, 0.521348, 0.554287, 0.527275, 0.0, 0.491021, 0.554287, 0.554287, 0.497438, 0.554287, 0.554287, 0.554287, 0.482105, 0.554287, 0.511038, 0.554287, 0.606841)));
        sequence.add( new Base("S", 11, 0.0985, Lists.newArrayList( 0.516616, 0.402012, 0.568189, 0.497438, 0.497438, 0.552127, 0.497438, 0.447961, 0.495316, 0.497438, 0.526422, 0.674252, 0.447961, 0.497438, 0.630048, 0.464738, 0.0, 0.424616, 0.591621, 0.605812, 0.497438)));
        sequence.add( new Base("K", 11, 0.1007, Lists.newArrayList( 0.451149, 0.455596, 0.455596, 0.423636, 0.455596, 0.455596, 0.451891, 0.451565, 0.455596, 0.455596, 0.424829, 0.455596, 0.0, 0.389341, 0.455596, 0.455596, 0.404661, 0.558758, 0.455596, 0.455596, 0.455596)));
        sequence.add( new Base("P", 11, 0.087, Lists.newArrayList( 0.574811, 0.562123, 0.56574, 0.5815, 0.5815, 0.5815, 0.536292, 0.5815, 0.5815, 0.550784, 0.5815, 0.644879, 0.530616, 0.5815, 0.5815, 0.0, 0.5815, 0.552981, 0.5815, 0.5815, 0.5815)));
        sequence.add( new Base("E", 11, 0.1349, Lists.newArrayList( 0.58852, 0.613095, 0.597762, 0.550231, 0.542608, 0.597762, 0.597762, 0.0, 0.558758, 0.597762, 0.597762, 0.597762, 0.66084, 0.597762, 0.597762, 0.597762, 0.541428, 0.597762, 0.597762, 0.597762, 0.541767)));
        sequence.add( new Base("D", 11, 0.1527, Lists.newArrayList( 0.615548, 0.569068, 0.626055, 0.648646, 0.0, 0.626055, 0.626055, 0.488108, 0.626055, 0.620429, 0.626055, 0.626055, 0.626055, 0.626055, 0.626055, 0.626055, 0.626055, 0.626055, 0.626055, 0.627888, 0.602559)));
        sequence.add( new Base("A", 6, 0.1275, Lists.newArrayList( 0.514741, 0.0, 0.530616, 0.530616, 0.45007, 0.530616, 0.530616, 0.453335, 0.510712, 0.530616, 0.479531, 0.530616, 0.482105, 0.530616, 0.530616, 0.486877, 0.517819, 0.530616, 0.530616, 0.530616, 0.562852)));
        sequence.add( new Base("N", 14, 0.2129, Lists.newArrayList( 0.373217, 0.382999, 0.346984, 0.0, 0.348202, 0.382999, 0.35605, 0.382999, 0.342237, 0.343681, 0.425357, 0.382999, 0.382999, 0.382999, 0.382999, 0.349583, 0.400517, 0.380011, 0.382999, 0.351504, 0.382999)));
        sequence.add( new Base("F", 34, 0.2988, Lists.newArrayList( 0.44222, 0.365883, 0.476743, 0.376319, 0.476743, 0.559411, 0.476743, 0.476743, 0.476743, 0.357645, 0.405478, 0.476743, 0.476743, 0.476743, 0.0, 0.476743, 0.485106, 0.365883, 0.476743, 0.335217, 0.383803)));
        sequence.add( new Base("Y", 35, 0.1881, Lists.newArrayList( 0.590566, 0.56574, 0.538314, 0.640157, 0.560252, 0.693038, 0.651082, 0.56574, 0.651082, 0.485496, 0.525668, 0.538314, 0.56574, 0.651082, 0.50432, 0.56574, 0.651082, 0.56574, 0.651082, 0.0, 0.651082)));
        sequence.add( new Base("L", 24, 0.1611, Lists.newArrayList( 0.627437, 0.643824, 0.632246, 0.643824, 0.643824, 0.643824, 0.643824, 0.643824, 0.643824, 0.529159, 0.618143, 0.0, 0.643824, 0.557402, 0.62495, 0.588243, 0.58435, 0.643824, 0.691456, 0.643824, 0.657123)));
        sequence.add( new Base("Y", 40, 0.1759, Lists.newArrayList( 0.72874, 0.730046, 0.730046, 0.814547, 0.646197, 0.767958, 0.730046, 0.730046, 0.730046, 0.709665, 0.730046, 0.730046, 0.730046, 0.730046, 0.687048, 0.730046, 0.730046, 0.730046, 0.730046, 0.0, 0.730046)));
        sequence.add( new Base("L", 73, 0.1476, Lists.newArrayList( 0.791353, 0.800985, 0.791353, 0.800985, 0.800985, 0.800985, 0.800985, 0.800985, 0.800985, 0.70768, 0.83415, 0.0, 0.800985, 0.772441, 0.81255, 0.756869, 0.753742, 0.800985, 0.834916, 0.800985, 0.762156)));
        sequence.add( new Base("R", 109, 0.1643, Lists.newArrayList( 0.754739, 0.830772, 0.0, 0.648332, 0.830772, 0.872589, 0.830772, 0.557402, 0.768535, 0.661455, 0.833434, 0.778946, 0.335217, 0.758652, 0.830772, 0.748556, 0.761453, 0.771424, 0.859416, 0.830772, 0.830772)));
        sequence.add( new Base("A", 114, 0.107, Lists.newArrayList( 0.866043, 0.0, 0.87888, 0.87888, 0.830508, 0.87888, 0.87888, 0.832932, 0.812814, 0.87888, 0.87888, 0.87888, 0.87888, 0.87888, 0.87888, 0.853011, 0.872187, 0.87888, 0.87888, 0.87888, 0.827921)));
        sequence.add( new Base("R", 113, 0.0817, Lists.newArrayList( 0.869171, 0.897139, 0.0, 0.897139, 0.897139, 0.925758, 0.897139, 0.897139, 0.852484, 0.903958, 0.899337, 0.860872, 0.654787, 0.845514, 0.897139, 0.837967, 0.84775, 0.855071, 0.916152, 0.834627, 0.897139)));
        sequence.add( new Base("V", 112, 0.0765, Lists.newArrayList( 0.857195, 0.772918, 0.871634, 0.871634, 0.814359, 0.871634, 0.871634, 0.846896, 0.739753, 0.871634, 0.871634, 0.865707, 0.871634, 0.911769, 0.875691, 0.871634, 0.871634, 0.871634, 0.871634, 0.871634, 0.0)));
        sequence.add( new Base("C", 112, 0.0646, Lists.newArrayList( 0.80706, 0.804651, 0.788552, 0.804651, 0.804651, 0.0, 0.804651, 0.804651, 0.816343, 0.804651, 0.804651, 0.804651, 0.804651, 0.804651, 0.770432, 0.804651, 0.804651, 0.804651, 0.833321, 0.860383, 0.804651)));
        sequence.add( new Base("E", 113, 0.0531, Lists.newArrayList( 0.767888, 0.712666, 0.821994, 0.821994, 0.619839, 0.821994, 0.640157, 0.0, 0.794392, 0.670534, 0.821994, 0.821994, 0.687337, 0.821994, 0.821994, 0.821994, 0.821994, 0.640157, 0.821994, 0.821994, 0.782864)));
        sequence.add( new Base("N", 116, 0.0948, Lists.newArrayList( 0.704873, 0.544819, 0.773131, 0.0, 0.599684, 0.773131, 0.773131, 0.773131, 0.612141, 0.607821, 0.807741, 0.773131, 0.637796, 0.773131, 0.773131, 0.773131, 0.681083, 0.677605, 0.773131, 0.492591, 0.773131)));
        sequence.add( new Base("C", 114, 0.0948, Lists.newArrayList( 0.805892, 0.80337, 0.787661, 0.80337, 0.80337, 0.0, 0.80337, 0.80337, 0.815388, 0.80337, 0.80337, 0.80337, 0.80337, 0.80337, 0.769414, 0.80337, 0.80337, 0.80337, 0.832454, 0.859843, 0.80337)));
        sequence.add( new Base("M", 113, 0.1048, Lists.newArrayList( 0.661993, 0.591194, 0.694809, 0.591194, 0.751369, 0.751369, 0.591194, 0.591194, 0.591194, 0.751369, 0.5028, 0.523659, 0.821014, 0.0, 0.644552, 0.751369, 0.751369, 0.737003, 0.751369, 0.751369, 0.438467)));
        sequence.add( new Base("E", 54, 0.107, Lists.newArrayList( 0.801016, 0.816343, 0.805832, 0.805832, 0.765747, 0.805832, 0.805832, 0.0, 0.777351, 0.805832, 0.805832, 0.805832, 0.813241, 0.805832, 0.805832, 0.805832, 0.805832, 0.805832, 0.805832, 0.805832, 0.764981)));
        sequence.add( new Base("M", 103, 0.1162, Lists.newArrayList( 0.744874, 0.753742, 0.833145, 0.753742, 0.753742, 0.753742, 0.753742, 0.753742, 0.753742, 0.753742, 0.787862, 0.62873, 0.82281, 0.0, 0.753742, 0.753742, 0.753742, 0.739125, 0.753742, 0.753742, 0.542282)));
        sequence.add( new Base("D", 32, 0.1251, Lists.newArrayList( 0.706492, 0.68141, 0.73252, 0.675106, 0.0, 0.73252, 0.73252, 0.521662, 0.66025, 0.727735, 0.73252, 0.73252, 0.73252, 0.73252, 0.73252, 0.73252, 0.652652, 0.73252, 0.73252, 0.73414, 0.712666)));
        sequence.add( new Base("V", 41, 0.0948, Lists.newArrayList( 0.623885, 0.433971, 0.670924, 0.670924, 0.583132, 0.670924, 0.670924, 0.630513, 0.488422, 0.670924, 0.58052, 0.539544, 0.670924, 0.75005, 0.678044, 0.550784, 0.670924, 0.58052, 0.670924, 0.670924, 0.0)));
        sequence.add( new Base("M", 50, 0.0543, Lists.newArrayList( 0.651628, 0.667094, 0.763161, 0.667094, 0.667094, 0.667094, 0.667094, 0.667094, 0.667094, 0.667094, 0.708497, 0.557678, 0.750326, 0.0, 0.570901, 0.570901, 0.598126, 0.523307, 0.667094, 0.667094, 0.667094)));
        sequence.add( new Base("S", 36, 0.0483, Lists.newArrayList( 0.37535, 0.206713, 0.434448, 0.369575, 0.369575, 0.420622, 0.369575, 0.285652, 0.367779, 0.369575, 0.324154, 0.54075, 0.369575, 0.293462, 0.495818, 0.341194, 0.0, 0.276786, 0.456525, 0.470301, 0.369575)));
        sequence.add( new Base("V", 34, 0.0851, Lists.newArrayList( 0.694729, 0.514555, 0.72393, 0.72393, 0.639843, 0.72393, 0.72393, 0.68583, 0.543387, 0.72393, 0.72393, 0.638851, 0.72393, 0.795321, 0.730046, 0.72393, 0.72393, 0.72393, 0.72393, 0.688781, 0.0)));
        sequence.add( new Base("A", 30, 0.078, Lists.newArrayList( 0.647568, 0.0, 0.671577, 0.671577, 0.593053, 0.671577, 0.671577, 0.596343, 0.652275, 0.671577, 0.596971, 0.671577, 0.671577, 0.671577, 0.671577, 0.627562, 0.658918, 0.596971, 0.671577, 0.671577, 0.594346)));
        sequence.add( new Base("T", 51, 0.0734, Lists.newArrayList( 0.611, 0.457756, 0.713859, 0.68583, 0.651974, 0.651974, 0.651974, 0.651974, 0.534609, 0.651974, 0.530942, 0.651974, 0.651974, 0.780854, 0.550231, 0.530189, 0.43755, 0.0, 0.651974, 0.651974, 0.519414)));
        sequence.add( new Base("I", 44, 0.0835, Lists.newArrayList( 0.663018, 0.662347, 0.712955, 0.704177, 0.662347, 0.662347, 0.662347, 0.662347, 0.662347, 0.662347, 0.0, 0.648973, 0.633225, 0.658153, 0.710757, 0.662347, 0.66084, 0.734391, 0.662347, 0.662347, 0.510398)));
        sequence.add( new Base("V", 78, 0.069, Lists.newArrayList( 0.750433, 0.654787, 0.783718, 0.783718, 0.708497, 0.783718, 0.783718, 0.749774, 0.616662, 0.783718, 0.612781, 0.660551, 0.783718, 0.84505, 0.78923, 0.783718, 0.783718, 0.783718, 0.783718, 0.783718, 0.0)));
        sequence.add( new Base("I", 60, 0.0424, Lists.newArrayList( 0.716124, 0.638525, 0.77337, 0.765747, 0.728263, 0.728263, 0.728263, 0.728263, 0.728263, 0.728263, 0.0, 0.716295, 0.702017, 0.724583, 0.771738, 0.728263, 0.636842, 0.713407, 0.728263, 0.728263, 0.609466)));
        sequence.add( new Base("V", 55, 0.0348, Lists.newArrayList( 0.705573, 0.488874, 0.748192, 0.748192, 0.666403, 0.748192, 0.748192, 0.712101, 0.48591, 0.748192, 0.62726, 0.738522, 0.748192, 0.815388, 0.755061, 0.748192, 0.748192, 0.634456, 0.748192, 0.748192, 0.0)));
        sequence.add( new Base("D", 48, 0.024, Lists.newArrayList( 0.801501, 0.767104, 0.809963, 0.826, 0.0, 0.809963, 0.809963, 0.696127, 0.809963, 0.80602, 0.809963, 0.809963, 0.809963, 0.809963, 0.809963, 0.809963, 0.809963, 0.809963, 0.809963, 0.811244, 0.792495)));
        sequence.add( new Base("I", 69, 0.0218, Lists.newArrayList( 0.711739, 0.726705, 0.772202, 0.763801, 0.726705, 0.624096, 0.726705, 0.726705, 0.726705, 0.726705, 0.0, 0.559072, 0.700045, 0.723013, 0.770432, 0.726705, 0.725701, 0.791353, 0.726705, 0.726705, 0.552981)));
        sequence.add( new Base("C", 65, 0.0178, Lists.newArrayList( 0.672339, 0.700422, 0.680028, 0.700422, 0.700422, 0.0, 0.700422, 0.700422, 0.524513, 0.700422, 0.602559, 0.602559, 0.700422, 0.609805, 0.540223, 0.700422, 0.700422, 0.700422, 0.73645, 0.773659, 0.700422)));
        sequence.add( new Base("I", 61, 0.0113, Lists.newArrayList( 0.712758, 0.725952, 0.771059, 0.762583, 0.725952, 0.725952, 0.725952, 0.725952, 0.725952, 0.725952, 0.0, 0.573161, 0.699329, 0.722122, 0.769414, 0.725952, 0.596971, 0.790122, 0.725952, 0.725952, 0.598126)));
        sequence.add( new Base("T", 64, 0.0146, Lists.newArrayList( 0.772648, 0.72069, 0.821014, 0.800294, 0.77337, 0.77337, 0.77337, 0.77337, 0.77337, 0.77337, 0.802768, 0.77337, 0.77337, 0.871245, 0.77337, 0.665436, 0.718417, 0.0, 0.77337, 0.77337, 0.77337)));
        sequence.add( new Base("G", 102, 0.0163, Lists.newArrayList( 0.692196, 0.692322, 0.784232, 0.746974, 0.734868, 0.719962, 0.746974, 0.724583, 0.0, 0.746974, 0.746974, 0.393071, 0.746974, 0.746974, 0.532914, 0.746974, 0.532914, 0.746974, 0.709978, 0.746974, 0.604116)));
        sequence.add( new Base("G", 62, 0.0168, Lists.newArrayList( 0.816364, 0.777351, 0.852283, 0.822383, 0.813241, 0.800294, 0.822383, 0.804651, 0.0, 0.822383, 0.822383, 0.822383, 0.822383, 0.769414, 0.822383, 0.822383, 0.822383, 0.822383, 0.791667, 0.822383, 0.855812)));
        sequence.add( new Base("L", 108, 0.024, Lists.newArrayList( 0.792877, 0.81098, 0.802944, 0.81098, 0.81098, 0.81098, 0.81098, 0.81098, 0.81098, 0.720489, 0.843744, 0.0, 0.81098, 0.783718, 0.703813, 0.769025, 0.766225, 0.81098, 0.844221, 0.81098, 0.72069)));
        sequence.add( new Base("L", 106, 0.032, Lists.newArrayList( 0.792177, 0.758979, 0.813542, 0.821994, 0.821994, 0.821994, 0.821994, 0.821994, 0.821994, 0.733085, 0.791353, 0.0, 0.821994, 0.651384, 0.833321, 0.780854, 0.68961, 0.821994, 0.853614, 0.821994, 0.747677)));
        sequence.add( new Base("L", 109, 0.0414, Lists.newArrayList( 0.70006, 0.761453, 0.752097, 0.761453, 0.761453, 0.625527, 0.761453, 0.761453, 0.761453, 0.658918, 0.671577, 0.0, 0.761453, 0.480372, 0.641589, 0.713859, 0.709978, 0.625527, 0.800294, 0.761453, 0.529774)));
        sequence.add( new Base("L", 110, 0.0568, Lists.newArrayList( 0.760361, 0.788891, 0.780176, 0.788891, 0.788891, 0.788891, 0.788891, 0.788891, 0.788891, 0.693277, 0.823601, 0.0, 0.788891, 0.759858, 0.802115, 0.55337, 0.739376, 0.712101, 0.824317, 0.788891, 0.658642)));
        sequence.add( new Base("V", 106, 0.0454, Lists.newArrayList( 0.831967, 0.655026, 0.859052, 0.859052, 0.798649, 0.859052, 0.859052, 0.832191, 0.721155, 0.859052, 0.732306, 0.852484, 0.859052, 0.902715, 0.863271, 0.859052, 0.859052, 0.859052, 0.859052, 0.859052, 0.0)));
        sequence.add( new Base("Y", 108, 0.069, Lists.newArrayList( 0.850048, 0.855975, 0.855975, 0.908554, 0.794166, 0.879571, 0.855975, 0.855975, 0.855975, 0.760398, 0.855975, 0.855975, 0.855975, 0.855975, 0.824581, 0.855975, 0.855975, 0.855975, 0.855975, 0.0, 0.855975)));
        sequence.add( new Base("Y", 112, 0.1373, Lists.newArrayList( 0.832435, 0.847411, 0.847411, 0.903343, 0.783718, 0.872777, 0.847411, 0.847411, 0.847411, 0.729795, 0.847411, 0.847411, 0.786995, 0.847411, 0.72329, 0.847411, 0.847411, 0.847411, 0.847411, 0.0, 0.847411)));
        sequence.add( new Base("W", 112, 0.15, Lists.newArrayList( 0.707902, 0.709978, 0.709978, 0.709978, 0.709978, 0.809072, 0.709978, 0.709978, 0.71573, 0.709978, 0.709978, 0.809963, 0.709978, 0.709978, 0.596645, 0.709978, 0.73414, 0.709978, 0.0, 0.554877, 0.709978)));
        sequence.add( new Base("S", 114, 0.1527, Lists.newArrayList( 0.812943, 0.650053, 0.856151, 0.80975, 0.80975, 0.763462, 0.80975, 0.80975, 0.80823, 0.80975, 0.830772, 0.909145, 0.80975, 0.80975, 0.889354, 0.786104, 0.0, 0.728514, 0.869575, 0.876557, 0.80975)));
        sequence.add( new Base("K", 111, 0.1527, Lists.newArrayList( 0.807126, 0.814359, 0.729242, 0.84191, 0.814359, 0.814359, 0.748556, 0.812312, 0.814359, 0.814359, 0.791026, 0.814359, 0.0, 0.761742, 0.814359, 0.814359, 0.814359, 0.87829, 0.814359, 0.814359, 0.814359)));
        sequence.add( new Base("N", 112, 0.1527, Lists.newArrayList( 0.695521, 0.590843, 0.556648, 0.0, 0.580809, 0.765999, 0.765999, 0.765999, 0.633024, 0.727522, 0.800985, 0.765999, 0.498757, 0.765999, 0.765999, 0.765999, 0.58582, 0.762156, 0.765999, 0.58435, 0.765999)));
        sequence.add( new Base("R", 73, 0.1852, Lists.newArrayList( 0.802193, 0.842965, 0.0, 0.842965, 0.842965, 0.88197, 0.727735, 0.842965, 0.782675, 0.851793, 0.845514, 0.792684, 0.488422, 0.773659, 0.842965, 0.764115, 0.776886, 0.785714, 0.869751, 0.842965, 0.842965)));
        sequence.add( new Base("K", 93, 0.247, Lists.newArrayList( 0.808266, 0.816167, 0.73645, 0.843317, 0.816167, 0.816167, 0.733662, 0.813542, 0.816167, 0.816167, 0.792935, 0.816167, 0.0, 0.763801, 0.816167, 0.816167, 0.816167, 0.879345, 0.816167, 0.816167, 0.816167)));
        sequence.add( new Base("A", 90, 0.2849, Lists.newArrayList( 0.80378, 0.0, 0.764981, 0.840316, 0.782675, 0.840316, 0.840316, 0.785187, 0.736764, 0.840316, 0.840316, 0.840316, 0.840316, 0.840316, 0.840316, 0.809072, 0.678659, 0.722122, 0.840316, 0.840316, 0.748882)));
        sequence.add( new Base("K", 65, 0.3426, Lists.newArrayList( 0.732093, 0.752399, 0.643824, 0.681799, 0.752399, 0.752399, 0.748882, 0.748556, 0.752399, 0.752399, 0.646712, 0.752399, 0.0, 0.690514, 0.752399, 0.752399, 0.643824, 0.829265, 0.752399, 0.752399, 0.752399)));
        sequence.add( new Base("A", 60, 0.391, Lists.newArrayList( 0.70985, 0.0, 0.753742, 0.753742, 0.680744, 0.592777, 0.753742, 0.683833, 0.653029, 0.753742, 0.753742, 0.753742, 0.753742, 0.753742, 0.648646, 0.612505, 0.545999, 0.753742, 0.753742, 0.753742, 0.778456)));
        sequence.add( new Base("K", 60, 0.4619, Lists.newArrayList( 0.723654, 0.737279, 0.737279, 0.771976, 0.737279, 0.737279, 0.734604, 0.734391, 0.737279, 0.737279, 0.710267, 0.737279, 0.0, 0.572471, 0.737279, 0.737279, 0.642217, 0.736149, 0.737279, 0.737279, 0.737279)));
        sequence.add( new Base("P", 58, 0.5493, Lists.newArrayList( 0.772649, 0.684147, 0.771059, 0.783115, 0.783115, 0.783115, 0.747853, 0.783115, 0.783115, 0.758979, 0.783115, 0.828411, 0.783115, 0.783115, 0.783115, 0.0, 0.783115, 0.709376, 0.783115, 0.783115, 0.783115)));
        sequence.add( new Base("V", 56, 0.6712, Lists.newArrayList( 0.743338, 0.537384, 0.771976, 0.771976, 0.694394, 0.771976, 0.771976, 0.73542, 0.601931, 0.771976, 0.771976, 0.763462, 0.771976, 0.749133, 0.777979, 0.771976, 0.771976, 0.771976, 0.771976, 0.771976, 0.0)));
        sequence.add( new Base("T", 56, 0.6661, Lists.newArrayList( 0.640135, 0.612781, 0.731816, 0.706387, 0.67287, 0.67287, 0.67287, 0.67287, 0.542998, 0.67287, 0.709376, 0.67287, 0.495818, 0.650605, 0.67287, 0.552981, 0.431096, 0.0, 0.67287, 0.67287, 0.67287)));
        sequence.add( new Base("R", 54, 0.6851, Lists.newArrayList( 0.834612, 0.814208, 0.0, 0.861551, 0.861551, 0.896172, 0.861551, 0.861551, 0.805593, 0.869751, 0.863836, 0.814547, 0.723654, 0.796564, 0.861551, 0.748192, 0.800055, 0.808557, 0.885637, 0.861551, 0.861551)));
        sequence.add( new Base("G", 55, 0.6851, Lists.newArrayList( 0.751427, 0.607444, 0.69079, 0.770155, 0.758979, 0.742616, 0.770155, 0.748556, 0.0, 0.770155, 0.770155, 0.770155, 0.71514, 0.770155, 0.770155, 0.770155, 0.770155, 0.770155, 0.733085, 0.770155, 0.808808)));
        sequence.add( new Base("A", 61, 0.6851, Lists.newArrayList( 0.63521, 0.0, 0.711071, 0.711071, 0.633539, 0.711071, 0.711071, 0.636842, 0.519075, 0.711071, 0.711071, 0.711071, 0.516187, 0.494726, 0.711071, 0.470301, 0.699618, 0.484265, 0.711071, 0.711071, 0.503717)));
        sequence.add( new Base("G", 70, 0.7036, Lists.newArrayList( 0.775412, 0.756417, 0.760021, 0.80494, 0.676399, 0.780578, 0.80494, 0.785501, 0.0, 0.80494, 0.68961, 0.80494, 0.80494, 0.80494, 0.80494, 0.80494, 0.706688, 0.720941, 0.772441, 0.80494, 0.839775)));
        sequence.add( new Base("A", 75, 0.7368, Lists.newArrayList( 0.762681, 0.0, 0.67454, 0.719347, 0.737631, 0.803584, 0.803584, 0.74072, 0.673774, 0.803584, 0.803584, 0.803584, 0.803584, 0.803584, 0.803584, 0.768837, 0.793538, 0.642217, 0.803584, 0.803584, 0.704503)));
        sequence.add( new Base("G", 76, 0.7718, Lists.newArrayList( 0.809589, 0.659584, 0.801675, 0.830985, 0.755274, 0.809348, 0.830985, 0.813241, 0.0, 0.830985, 0.830985, 0.830985, 0.830985, 0.784232, 0.830985, 0.784232, 0.830985, 0.830985, 0.801675, 0.830985, 0.863083)));
        sequence.add( new Base("G", 99, 0.8198, Lists.newArrayList( 0.833125, 0.67454, 0.879747, 0.854782, 0.846896, 0.834916, 0.854782, 0.839148, 0.0, 0.854782, 0.783529, 0.854782, 0.854782, 0.854782, 0.854782, 0.854782, 0.783529, 0.783529, 0.827318, 0.854782, 0.883188)));
        sequence.add( new Base("R", 96, 0.8493, Lists.newArrayList( 0.862231, 0.895331, 0.0, 0.895331, 0.895331, 0.924063, 0.839775, 0.895331, 0.778732, 0.848767, 0.897139, 0.858788, 0.677843, 0.842965, 0.895331, 0.835104, 0.845276, 0.852484, 0.914143, 0.895331, 0.895331)));
        sequence.add( new Base("Q", 102, 0.7595, Lists.newArrayList( 0.633288, 0.414745, 0.697634, 0.704767, 0.704767, 0.704767, 0.0, 0.757334, 0.530942, 0.737945, 0.704767, 0.424616, 0.704767, 0.704767, 0.704767, 0.470602, 0.485496, 0.465491, 0.704767, 0.704767, 0.704767)));
        sequence.add( new Base("R", 94, 0.8375, Lists.newArrayList( 0.852034, 0.893862, 0.0, 0.893862, 0.893862, 0.922519, 0.788891, 0.893862, 0.743018, 0.900354, 0.895632, 0.856615, 0.622639, 0.840981, 0.893862, 0.754596, 0.843153, 0.850324, 0.912899, 0.893862, 0.893862)));
        sequence.add( new Base("G", 65, 0.8421, Lists.newArrayList( 0.825045, 0.72069, 0.860383, 0.831877, 0.82281, 0.80975, 0.831877, 0.813743, 0.0, 0.831877, 0.831877, 0.831877, 0.831877, 0.831877, 0.831877, 0.831877, 0.831877, 0.831877, 0.802303, 0.831877, 0.86366)));
        sequence.add( new Base("Q", 59, 0.8623, Lists.newArrayList( 0.68032, 0.607821, 0.697634, 0.704767, 0.704767, 0.704767, 0.0, 0.631091, 0.704767, 0.737945, 0.704767, 0.698262, 0.593053, 0.704767, 0.704767, 0.678044, 0.704767, 0.704767, 0.704767, 0.626746, 0.607821)));
        sequence.add( new Base("N", 91, 0.8741, Lists.newArrayList( 0.787737, 0.802944, 0.802944, 0.0, 0.773131, 0.802944, 0.802944, 0.802944, 0.802944, 0.769628, 0.834627, 0.802944, 0.648646, 0.802944, 0.802944, 0.802944, 0.72884, 0.80047, 0.802944, 0.776334, 0.802944)));
        sequence.add( new Base("K", 101, 0.8235, Lists.newArrayList( 0.756401, 0.788552, 0.643234, 0.645683, 0.788552, 0.788552, 0.786104, 0.78589, 0.788552, 0.788552, 0.763161, 0.788552, 0.0, 0.615983, 0.788552, 0.788552, 0.788552, 0.773659, 0.788552, 0.788552, 0.683833)));
        sequence.add( new Base("E", 101, 0.8343, Lists.newArrayList( 0.83533, 0.86783, 0.859052, 0.859052, 0.737279, 0.859052, 0.750992, 0.0, 0.718417, 0.859052, 0.859052, 0.859052, 0.892631, 0.859052, 0.859052, 0.859052, 0.859052, 0.859052, 0.859052, 0.859052, 0.73645)));
        sequence.add( new Base("R", 104, 0.8765, Lists.newArrayList( 0.840049, 0.884092, 0.0, 0.884092, 0.884092, 0.913891, 0.884092, 0.884092, 0.834363, 0.817862, 0.886327, 0.843317, 0.488874, 0.82664, 0.884092, 0.818101, 0.71696, 0.837302, 0.904548, 0.884092, 0.884092)));
        sequence.add( new Base("P", 104, 0.805, Lists.newArrayList( 0.865274, 0.805832, 0.860383, 0.869173, 0.869173, 0.869173, 0.843317, 0.869173, 0.869173, 0.851429, 0.869173, 0.900103, 0.869173, 0.869173, 0.869173, 0.0, 0.869173, 0.879885, 0.869173, 0.869173, 0.869173)));
        sequence.add( new Base("P", 113, 0.8125, Lists.newArrayList( 0.871965, 0.862656, 0.864477, 0.872941, 0.872941, 0.872941, 0.848001, 0.872941, 0.872941, 0.856151, 0.872941, 0.903607, 0.872941, 0.872941, 0.872941, 0.0, 0.872941, 0.884217, 0.872941, 0.872941, 0.872941)));
        sequence.add( new Base("P", 113, 0.8125, Lists.newArrayList( 0.871965, 0.862656, 0.864477, 0.872941, 0.872941, 0.872941, 0.848001, 0.872941, 0.872941, 0.856151, 0.872941, 0.903607, 0.872941, 0.872941, 0.872941, 0.0, 0.872941, 0.884217, 0.872941, 0.872941, 0.872941)));
        sequence.add( new Base("V", 113, 0.795, Lists.newArrayList( 0.84451, 0.760599, 0.863459, 0.863459, 0.80494, 0.863459, 0.863459, 0.837553, 0.727522, 0.863459, 0.785187, 0.85767, 0.863459, 0.906344, 0.86783, 0.863459, 0.863459, 0.863459, 0.863459, 0.863459, 0.0)));
        sequence.add( new Base("P", 113, 0.805, Lists.newArrayList( 0.871965, 0.862656, 0.864477, 0.872941, 0.872941, 0.872941, 0.848001, 0.872941, 0.872941, 0.856151, 0.872941, 0.903607, 0.872941, 0.872941, 0.872941, 0.0, 0.872941, 0.884217, 0.872941, 0.872941, 0.872941)));
        sequence.add( new Base("N", 113, 0.8125, Lists.newArrayList( 0.838714, 0.841697, 0.841697, 0.0, 0.814547, 0.841697, 0.841697, 0.841697, 0.841697, 0.811822, 0.869173, 0.841697, 0.841697, 0.841697, 0.841697, 0.841697, 0.84127, 0.839323, 0.841697, 0.817372, 0.841697)));
        sequence.add( new Base("P", 113, 0.8125, Lists.newArrayList( 0.871965, 0.862656, 0.864477, 0.872941, 0.872941, 0.872941, 0.848001, 0.872941, 0.872941, 0.856151, 0.872941, 0.903607, 0.872941, 0.872941, 0.872941, 0.0, 0.872941, 0.884217, 0.872941, 0.872941, 0.872941)));
        sequence.add( new Base("D", 113, 0.725, Lists.newArrayList( 0.887621, 0.864477, 0.893548, 0.904272, 0.0, 0.893548, 0.893548, 0.812123, 0.893548, 0.890936, 0.893548, 0.893548, 0.893548, 0.893548, 0.893548, 0.893548, 0.893548, 0.893548, 0.893548, 0.894377, 0.882484)));
        sequence.add( new Base("Y", 113, 0.6269, Lists.newArrayList( 0.861076, 0.862656, 0.862656, 0.913314, 0.802944, 0.886001, 0.862656, 0.862656, 0.862656, 0.84829, 0.862656, 0.862656, 0.862656, 0.862656, 0.832718, 0.862656, 0.862656, 0.862656, 0.862656, 0.0, 0.862656)));
        sequence.add( new Base("E", 111, 0.6183, Lists.newArrayList( 0.872626, 0.883188, 0.874987, 0.874987, 0.844221, 0.874987, 0.874987, 0.0, 0.853175, 0.874987, 0.874987, 0.874987, 0.905967, 0.874987, 0.874987, 0.874987, 0.874987, 0.874987, 0.874987, 0.874987, 0.84353)));
        sequence.add( new Base("P", 110, 0.6089, Lists.newArrayList( 0.854933, 0.84775, 0.850148, 0.859654, 0.859654, 0.859654, 0.832191, 0.859654, 0.859654, 0.841119, 0.859654, 0.892342, 0.859654, 0.859654, 0.859654, 0.0, 0.859654, 0.871634, 0.859654, 0.859654, 0.792684)));
        sequence.add( new Base("I", 110, 0.4979, Lists.newArrayList( 0.828418, 0.826853, 0.860872, 0.854267, 0.826853, 0.826853, 0.826853, 0.826853, 0.826853, 0.826853, 0.0, 0.739125, 0.80602, 0.82384, 0.859654, 0.826853, 0.826, 0.874774, 0.826853, 0.826853, 0.826853)));
        sequence.add( new Base("R", 110, 0.4831, Lists.newArrayList( 0.896657, 0.91256, 0.0, 0.91256, 0.91256, 0.9374, 0.91256, 0.91256, 0.873405, 0.91845, 0.914042, 0.880023, 0.80975, 0.86729, 0.91256, 0.860596, 0.869387, 0.875691, 0.929965, 0.91256, 0.91256)));
        sequence.add( new Base("K", 110, 0.4685, Lists.newArrayList( 0.812007, 0.817372, 0.751746, 0.844535, 0.817372, 0.817372, 0.814811, 0.814547, 0.817372, 0.817372, 0.794166, 0.817372, 0.0, 0.765999, 0.817372, 0.817372, 0.817372, 0.833873, 0.817372, 0.817372, 0.817372)));
        sequence.add( new Base("G", 110, 0.5382, Lists.newArrayList( 0.869304, 0.834916, 0.894728, 0.872187, 0.864803, 0.853614, 0.872187, 0.858122, 0.0, 0.872187, 0.872187, 0.872187, 0.872187, 0.872187, 0.872187, 0.872187, 0.872187, 0.872187, 0.84721, 0.872187, 0.897139)));
        sequence.add( new Base("Q", 110, 0.5139, Lists.newArrayList( 0.804452, 0.806761, 0.801675, 0.743018, 0.806761, 0.806761, 0.0, 0.84775, 0.806761, 0.755061, 0.806761, 0.802303, 0.806761, 0.806761, 0.806761, 0.846896, 0.806761, 0.806761, 0.806761, 0.806761, 0.806761)));
        sequence.add( new Base("R", 106, 0.422, Lists.newArrayList( 0.858741, 0.888424, 0.0, 0.888424, 0.888424, 0.91796, 0.692887, 0.888424, 0.840579, 0.894917, 0.890157, 0.848968, 0.767744, 0.832932, 0.888424, 0.824581, 0.835242, 0.842965, 0.908178, 0.888424, 0.888424)));
        sequence.add( new Base("D", 108, 0.3948, Lists.newArrayList( 0.842681, 0.82507, 0.861337, 0.874347, 0.0, 0.861337, 0.861337, 0.626997, 0.779963, 0.85865, 0.861337, 0.861337, 0.861337, 0.861337, 0.861337, 0.861337, 0.861337, 0.861337, 0.861337, 0.862656, 0.84721)));
        sequence.add( new Base("L", 108, 0.3667, Lists.newArrayList( 0.817719, 0.828134, 0.820148, 0.828134, 0.828134, 0.828134, 0.828134, 0.828134, 0.828134, 0.74121, 0.859416, 0.0, 0.828134, 0.802944, 0.839775, 0.788314, 0.785714, 0.828134, 0.859968, 0.828134, 0.757823)));
        sequence.add( new Base("Y", 108, 0.433, Lists.newArrayList( 0.8602, 0.861739, 0.861739, 0.912736, 0.802115, 0.885323, 0.861739, 0.861739, 0.861739, 0.847411, 0.861739, 0.861739, 0.861739, 0.861739, 0.831877, 0.861739, 0.861739, 0.861739, 0.861739, 0.0, 0.861739)));
        sequence.add( new Base("S", 108, 0.4051, Lists.newArrayList( 0.779344, 0.527275, 0.826163, 0.775003, 0.677328, 0.815125, 0.775003, 0.775003, 0.773131, 0.775003, 0.798121, 0.889165, 0.775003, 0.775003, 0.865054, 0.748556, 0.0, 0.770155, 0.84191, 0.850537, 0.775003)));
        sequence.add( new Base("G", 63, 0.3599, Lists.newArrayList( 0.817975, 0.778456, 0.853175, 0.8234, 0.771738, 0.801675, 0.8234, 0.805832, 0.0, 0.8234, 0.8234, 0.8234, 0.8234, 0.8234, 0.8234, 0.8234, 0.8234, 0.8234, 0.792935, 0.8234, 0.856917)));
        sequence.add( new Base("L", 59, 0.4369, Lists.newArrayList( 0.760491, 0.768221, 0.757823, 0.768221, 0.768221, 0.768221, 0.768221, 0.768221, 0.768221, 0.666403, 0.80494, 0.0, 0.768221, 0.73542, 0.780854, 0.720175, 0.71696, 0.768221, 0.805593, 0.768221, 0.778946)));
        sequence.add( new Base("N", 103, 0.4087, Lists.newArrayList( 0.7945, 0.815388, 0.815388, 0.0, 0.700045, 0.815388, 0.733662, 0.733662, 0.733662, 0.783718, 0.846732, 0.815388, 0.751369, 0.815388, 0.815388, 0.815388, 0.870906, 0.813341, 0.815388, 0.789909, 0.815388)));
        sequence.add( new Base("Q", 58, 0.3872, Lists.newArrayList( 0.691581, 0.633539, 0.70768, 0.714135, 0.714135, 0.714135, 0.0, 0.766589, 0.633539, 0.648332, 0.714135, 0.708497, 0.655867, 0.714135, 0.714135, 0.691707, 0.633539, 0.633539, 0.714135, 0.714135, 0.714135)));
        sequence.add( new Base("R", 55, 0.3667, Lists.newArrayList( 0.83864, 0.861048, 0.0, 0.861048, 0.861048, 0.895733, 0.861048, 0.861048, 0.80494, 0.869387, 0.863459, 0.814032, 0.72275, 0.796062, 0.861048, 0.78746, 0.798887, 0.807741, 0.885323, 0.861048, 0.861048)));
        sequence.add( new Base("R", 46, 0.3249, Lists.newArrayList( 0.681856, 0.559788, 0.0, 0.59466, 0.738258, 0.794392, 0.738258, 0.738258, 0.46578, 0.752097, 0.74185, 0.673774, 0.560717, 0.650053, 0.738258, 0.638236, 0.653343, 0.664143, 0.776886, 0.738258, 0.738258)));
        sequence.add( new Base("I", 11, 0.2816, Lists.newArrayList( 0.531337, 0.52818, 0.583132, 0.572735, 0.52818, 0.52818, 0.52818, 0.52818, 0.52818, 0.52818, 0.0, 0.513964, 0.499046, 0.469434, 0.580809, 0.52818, 0.526735, 0.608913, 0.52818, 0.52818, 0.458836)));

        testProtein.setSequence( sequence );
    }

    @RequestMapping(value = "/testProteins", method = RequestMethod.GET)
    public List<Protein> testProtein() {

        return Lists.newArrayList(testProtein, testProtein, testProtein);
    }
}
